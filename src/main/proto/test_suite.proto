// Copyright 2014 Google Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto2";

option java_package = "com.google.testing.results";
option java_outer_classname = "TestSuiteProto";

// In Ant's junit task XML format, this message represents the node
// <testsuite failures="0" time="0.068" errors="0" skipped="0" tests="4"
//            name="com.google.errorprone.matchers.ConstructorOfClassTest">
message TestSuite {
    optional string name = 1;
    optional int64 elapsed_time_millis = 2;
    optional int32 total_count = 3;
    optional int32 failure_count = 4;
    optional int32 error_count = 5;
    optional int32 skipped_count = 6;
    repeated Property unrecognized_attributes = 7;

    repeated Property property = 8;
    repeated TestCase test_case = 9;
}

// In Ant's junit task XML format, this message represents the node
// <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
message Property {
    optional string name = 1;
    optional string value = 2;
}

// In Ant's junit task XML format, this message represents the node
// <testcase time="0.017" classname="com.google.errorprone.matchers.ConstructorOfClassTest"
//           name="shouldMatchSingleConstructor"/>
message TestCase {
    optional string class_name = 1;
    optional string name = 2;
    optional double start_timestamp = 9;
    optional double end_timestamp = 10;
    optional int64 elapsed_time_millis = 3;
    repeated Property unrecognized_attributes = 4;

    repeated StackTrace failure = 5; // An assertion failed.
    optional StackTrace error = 6;   // An unexpected exception was thrown

    optional TestStatus status = 7;
    optional string skipped_message = 8; // Message about why the test was skipped
}

// The status of a test case.
enum TestStatus {
    // Test passed.
    PASSED = 0;

    // Test failed.
    FAILED = 1;

    // Test encountered an error
    ERROR = 2;

    // Test skipped
    SKIPPED = 3;
}


// In Ant's junit task XML format, this message represents the nodes
// <failure message="expected:&lt;1&gt; but was:&lt;2&gt;" type="java.lang.AssertionError">
// and
// <error message="/ by zero" type="java.lang.ArithmeticException">
message StackTrace {
    optional string exception_message = 1;
    optional string exception_type = 2;
    repeated Property unrecognized_attributes = 3;

    // Experimental, sometimes the stack trace parsing might not work.
    repeated StackContent stack_content = 4;
    optional string content = 5;
}

// In Ant's junit task XML format, this message represents a line within a <failure> such as
// "        at org.junit.Assert.fail(Assert.java:88)"
// TODO(pepstein): Switch to oneof when available.
message StackContent {
    optional string text = 1;
    optional CodeReference code_reference = 2;
}

message CodeReference {
    optional string text = 1; // Plain text to display within href.
    optional string path = 2; // Path to source file. May be relative or absolute
    optional int32 line_number = 3; // Line number within file
}
